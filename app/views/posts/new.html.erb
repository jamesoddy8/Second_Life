<% if @post.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(@post.errors.count, "error") %> prohibited post from being saved:</h2>

    <ul>
    <% @post.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
    <% end %>
    </ul>
  </div>
<% end %>

<h1> New Post </h1>

<%= form_with(model: [@post], local: true, data: { controller: 'places', action: 'google-maps-callback@window->places#initMap' }) do |f|%>

  <%= f.label :title %><br>
  <%= f.text_field :title %><br>

  <%= f.label :description %><br>
  <%= f.text_area :description %><br>

  <%= f.label :address %><br>
  <%= f.search_field :address, data: { target: 'places.field', action: 'keydown->places#keydown' } %><br>

  <%= f.label :city %><br>
  <%= f.text_field :city, data: { target: 'places.city' } %><br>

  <%= f.label :postcode %><br>
  <%= f.text_field :postcode, data: { target: 'places.postcode' } %><br>

  <div id="myDIV" class="header">
    <h7>Add items</h7></br>
    <input type="text" id="myInput" placeholder="Item...">
    <span onclick="newElement()" class="addBtn">Add</span>
  </div>

  <div id="myUL">
     
  </div>

  <%= f.hidden_field :latitude, data: { target: 'places.latitude' } %><br>
  <%= f.hidden_field :longitude, data: { target: 'places.longitude' } %><br>

  <%= f.label :main_image %><br>
  <%= f.file_field :main_image %><br>

  <%= f.submit %>

  <div>
      <div data-target='places.map' style='height: 400px'></div>
  </div>
<%end%>

<script>
// Create a "close" button and append it to each list item
var myNodelist = document.getElementsByTagName("p");
var i;
for (i = 0; i < myNodelist.length; i++) {
  var span = document.createElement("SPAN");
  var txt = document.createTextNode("\u00D7");
  span.className = "close";
  span.appendChild(txt);
  myNodelist[i].appendChild(span);
}

// Click on a close button to hide the current list item
var close = document.getElementsByClassName("close");
var i;
for (i = 0; i < close.length; i++) {
  close[i].onclick = function() {
    var div = this.parentElement;
    div.style.display = "none";
  }
}

// Create a new list item when clicking on the "Add" button
function newElement() {
  var li = document.createElement("p");
  var inputValue = document.getElementById("myInput").value;
  var t = document.createTextNode(inputValue);
  li.appendChild(t);
  if (inputValue === '') {
    alert("You must write something!");
  } else {
    document.getElementById("myUL").appendChild(li);
  }
  document.getElementById("myInput").value = "";

  var span = document.createElement("SPAN");
  var txt = document.createTextNode("\u00D7");
  span.className = "close";
  span.appendChild(txt);
  li.appendChild(span);

  for (i = 0; i < close.length; i++) {
    close[i].onclick = function() {
      var div = this.parentElement;
      div.style.display = "none";
    }
  }
}
$('form input').keydown(function (e) {
    if (e.keyCode == 13) {
        e.preventDefault();
        return false;
    }
});

</script>
